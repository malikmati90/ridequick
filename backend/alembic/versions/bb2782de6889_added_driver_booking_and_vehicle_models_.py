"""Added Driver, Booking and Vehicle models, updated User Model to add relationships

Revision ID: bb2782de6889
Revises: 63be82ca39cf
Create Date: 2025-05-03 14:39:33.680491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'bb2782de6889'
down_revision: Union[str, None] = '63be82ca39cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver',
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('booking',
    sa.Column('pickup_location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dropoff_location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scheduled_time', sa.DateTime(), nullable=False),
    sa.Column('vehicle_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fare', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'assigned', 'completed', 'canceled', name='bookingstatus'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payment_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cancellation_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rating_given', sa.Integer(), nullable=True),
    sa.Column('distance_km', sa.Float(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicle',
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('plate_number', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('category', sa.Enum('economy', 'standard', 'premium', name='vehiclecategory'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('driver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['driver_id'], ['driver.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plate_number')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vehicle')
    op.drop_table('booking')
    op.drop_table('driver')
    # ### end Alembic commands ###
